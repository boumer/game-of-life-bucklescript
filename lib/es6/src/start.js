// Generated by BUCKLESCRIPT VERSION 1.7.4, PLEASE EDIT WITH CARE
'use strict';

import * as Lst        from "./lst.js";
import * as List       from "bs-platform/lib/es6/list.js";
import * as Types      from "./types.js";
import * as Option     from "./option.js";
import * as Tea_cmd    from "bucklescript-tea/lib/es6/src/tea_cmd.js";
import * as GameOfLife from "./gameOfLife.js";

function update(model, msg) {
  var xMin = model[/* viewPort */2][/* xMin */0];
  var yMin = model[/* viewPort */2][/* yMin */1];
  var xMax = model[/* viewPort */2][/* xMax */2];
  var yMax = model[/* viewPort */2][/* yMax */3];
  var cellSize = model[/* viewPort */2][/* cellSize */4];
  var newModel;
  if (typeof msg === "number") {
    switch (msg) {
      case 0 : 
          newModel = model;
          break;
      case 1 : 
          newModel = /* record */[
            /* universe */GameOfLife.evolve(model[/* universe */0]),
            /* examples */model[/* examples */1],
            /* viewPort */model[/* viewPort */2],
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 2 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */model[/* viewPort */2],
            /* running */1 - model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 3 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */Types.newViewPort(xMin - 1 | 0, yMin - 1 | 0, xMax + 1 | 0, yMax + 1 | 0, cellSize - 2 | 0),
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 4 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */Types.newViewPort(xMin + 1 | 0, yMin + 1 | 0, xMax - 1 | 0, yMax - 1 | 0, cellSize + 2 | 0),
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 5 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */Types.newViewPort(xMin - 1 | 0, yMin, xMax - 1 | 0, yMax, cellSize),
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 6 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */Types.newViewPort(xMin + 1 | 0, yMin, xMax + 1 | 0, yMax, cellSize),
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 7 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */Types.newViewPort(xMin, yMin + 1 | 0, xMax, yMax + 1 | 0, cellSize),
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      case 8 : 
          newModel = /* record */[
            /* universe */model[/* universe */0],
            /* examples */model[/* examples */1],
            /* viewPort */Types.newViewPort(xMin, yMin - 1 | 0, xMax, yMax - 1 | 0, cellSize),
            /* running */model[/* running */3],
            /* pixi */model[/* pixi */4]
          ];
          break;
      
    }
  } else {
    var string = msg[0];
    var newUniverse = Option.withDefault(/* tuple */[
            "",
            /* [] */0
          ], Lst.head(List.filter(function (i) {
                      return +(i[0] === string);
                    })(model[/* examples */1])))[1];
    newModel = /* record */[
      /* universe */newUniverse,
      /* examples */model[/* examples */1],
      /* viewPort */model[/* viewPort */2],
      /* running */model[/* running */3],
      /* pixi */model[/* pixi */4]
    ];
  }
  return /* tuple */[
          newModel,
          Tea_cmd.none
        ];
}

var evolve = GameOfLife.evolve;

export {
  evolve ,
  update ,
  
}
/* GameOfLife Not a pure module */
